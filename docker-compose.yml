version: '3.7'

networks:
  tattle-tale:
    driver: bridge

volumes:
  setup:
  elasticsearch:

services:
  setup:
    # The 'setup' service runs a one-off script which initializes the
    # 'logstash_internal' and 'kibana_system' users inside Elasticsearch with the
    # values of the passwords defined in the '.env' file.
    #
    # This task is only performed during the *initial* startup of the stack. On all
    # subsequent runs, the service simply returns immediately, without performing
    # any modification to existing users.
    #
    # See https://github.com/deviantony/docker-elk#setting-up-user-authentication
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - tattle-tale

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: -Xmx256m -Xms256m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - tattle-tale

  logstash:
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - type: bind
        target: /usr/share/logstash/pipeline
        source: ./logstash/pipeline
        read_only: true
      - type: bind
        # This directory must be mapped to TattleTale's /opt/tattle-tale/lib/logstash directory
        #         source: ${TT_HOST_LIB_DIRECTORY}/logstash
        target: /usr/share/logstash/tattle-tale
        source: ./lib/logstash
        read_only: true
    environment:
      LS_JAVA_OPTS: -Xmx256m -Xms256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - tattle-tale
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    ports:
      # Replace 0.0.0.0 with the IP address you want the web interface to run on
      - "0.0.0.0:5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - tattle-tale
    depends_on:
      - elasticsearch

  filebeat:
    # See https://www.elastic.co/guide/en/beats/filebeat/8.2/running-on-docker.html#running-on-docker
    build:
      context: filebeat/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    ports:
      # Replace 0.0.0.0 with the IP of the interface receiving netflow
      - 0.0.0.0:2055:2055/udp
    networks:
      - tattle-tale
    depends_on:
      - logstash

  fletch:
    # Fetches and flushes things
    build:
      context: fletch/
    environment:
      TT_SHADOW_USER: BLAH
      TT_SHADOW_PASS: BLAH
      TT_SNMP_COMMUNITY_STRING: BLAH
        # Change to match your naming convention
      # BTW, https://regex101.com is really good for testing regex
      TT_INT_DESCRIPTION_PEER_NAME_REGEX: '\[NAME=(.+?)\]'
    volumes:
      - type: bind
        # This lib directory must also be mapped to logstash's /usr/share/logstash/tattle-tale
        #        source: ${TT_HOST_LIB_DIRECTORY}
        source: ./lib
        target: /opt/tattle-tale/lib
        read_only: false
    networks:
      - tattle-tale
